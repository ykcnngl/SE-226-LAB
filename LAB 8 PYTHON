from datetime import datetime

class ArchiveItem:
    def __init__(self, uid, title, year):
        self.uid = uid
        self.title = title
        self.year = int(year)

    def __str__(self):
        return f"{self.__class__.__name__} -> UID: {self.uid}, Title: {self.title}, Year: {self.year}"

    def __eq__(self, other):
        return self.uid == other.uid

    def is_recent(self, n):
        return self.year >= (2025 - n)


class Book(ArchiveItem):
    def __init__(self, uid, title, year, author, pages):
        super().__init__(uid, title, year)
        self.author = author
        self.pages = int(pages)

    def __str__(self):
        return f"Book -> UID: {self.uid}, Title: {self.title}, Year: {self.year}, Author: {self.author}, Pages: {self.pages}"

class Article(ArchiveItem):
    def __init__(self, uid, title, year, journal, doi):
        super().__init__(uid, title, year)
        self.journal = journal
        self.doi = doi

    def __str__(self):
        return f"Article -> UID: {self.uid}, Title: {self.title}, Year: {self.year}, Journal: {self.journal}, DOI: {self.doi}"

class Podcast(ArchiveItem):
    def __init__(self, uid, title, year, host, duration):
        super().__init__(uid, title, year)
        self.host = host
        self.duration = int(duration)

    def __str__(self):
        return f"Podcast -> UID: {self.uid}, Title: {self.title}, Year: {self.year}, Host: {self.host}, Duration: {self.duration} mins"

# CREATE AND SAVE PART
def save_to_file(items, filename):
    with open(filename, 'w') as file:
        for item in items:
            if isinstance(item, Book):
                line = f"Book,{item.uid},{item.title},{item.year},{item.author},{item.pages}"
            elif isinstance(item, Article):
                line = f"Article,{item.uid},{item.title},{item.year},{item.journal},{item.doi}"
            elif isinstance(item, Podcast):
                line = f"Podcast,{item.uid},{item.title},{item.year},{item.host},{item.duration}"
            file.write(line + "\n")

# LOAD PART
def load_from_file(filename):
    items = []
    with open(filename, 'r') as file:
        for line in file:
            parts = line.strip().split(",")
            if parts[0] == "Book":
                items.append(Book(*parts[1:]))
            elif parts[0] == "Article":
                items.append(Article(*parts[1:]))
            elif parts[0] == "Podcast":
                items.append(Podcast(*parts[1:]))
    return items


if __name__ == "__main__":
    archive_items = [
        Book("B001", "Software Enginnering", 2016, "Ian Sommerville", 768),
        Book("B002", "Tesla", 2000, "Frank Russell", 1097),
        Book("B003", "Clean Code", 2020, "Robert C. Martin", 464),
        Article("A101", "Future's Electricty Car", 2021, "Nature", "10.1234/fec427"),
        Article("A102", "AI Generations", 2023, "Science", "10.145/aigen42"),
        Podcast("P301", "Team Play Cast", 2023, "Phil Jackson", 30),
        Podcast("P302", "Mamba Mentality", 2019, "Kobe Bryant", 50)
    ]

    save_to_file(archive_items, "archive.txt")
    loaded_items = load_from_file("archive.txt")

    print("\n--- All Items ---")
    for item in loaded_items:
        print(item)

    print("\n--- Recent Items (last 5 years) ---")
    for item in loaded_items:
        if item.is_recent(5):
            print(item)

    print("\n--- Articles with DOI starting '10.1234' ---")
    for item in loaded_items:
        if isinstance(item, Article) and item.doi.startswith("10.1234"):
            print(item)
